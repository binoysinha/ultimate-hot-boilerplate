// flow-typed signature: 5c79646ce2484c0f5d727ae8dfd59655
// flow-typed version: <<STUB>>/tslint-eslint-rules_v^4.1.1/flow_v0.50.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'tslint-eslint-rules'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'tslint-eslint-rules' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'tslint-eslint-rules/dist/rules/arrayBracketSpacingRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/blockSpacingRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/braceStyleRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/handleCallbackErrRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noConstantConditionRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noControlRegexRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noDuplicateCaseRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noEmptyCharacterClassRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noExAssignRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noExtraBooleanCastRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noExtraSemiRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noInnerDeclarationsRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noInvalidRegexpRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noMultiSpacesRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noRegexSpacesRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/noUnexpectedMultilineRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/objectCurlySpacingRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/sortImportsRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/spaceInParensRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terArrowBodyStyleRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terArrowParensRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terArrowSpacingRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terFuncCallSpacingRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terIndentRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terMaxLenRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terNoIrregularWhitespaceRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terNoSparseArraysRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/terPreferArrowCallbackRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/validJsdocRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/rules/validTypeofRule' {
  declare module.exports: any;
}

declare module 'tslint-eslint-rules/dist/support/token' {
  declare module.exports: any;
}

// Filename aliases
declare module 'tslint-eslint-rules/dist/rules/arrayBracketSpacingRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/arrayBracketSpacingRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/blockSpacingRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/blockSpacingRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/braceStyleRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/braceStyleRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/handleCallbackErrRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/handleCallbackErrRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noConstantConditionRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noConstantConditionRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noControlRegexRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noControlRegexRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noDuplicateCaseRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noDuplicateCaseRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noEmptyCharacterClassRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noEmptyCharacterClassRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noExAssignRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noExAssignRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noExtraBooleanCastRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noExtraBooleanCastRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noExtraSemiRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noExtraSemiRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noInnerDeclarationsRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noInnerDeclarationsRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noInvalidRegexpRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noInvalidRegexpRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noMultiSpacesRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noMultiSpacesRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noRegexSpacesRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noRegexSpacesRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/noUnexpectedMultilineRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/noUnexpectedMultilineRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/objectCurlySpacingRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/objectCurlySpacingRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/sortImportsRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/sortImportsRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/spaceInParensRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/spaceInParensRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terArrowBodyStyleRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terArrowBodyStyleRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terArrowParensRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terArrowParensRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terArrowSpacingRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terArrowSpacingRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terFuncCallSpacingRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terFuncCallSpacingRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terIndentRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terIndentRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terMaxLenRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terMaxLenRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terNoIrregularWhitespaceRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terNoIrregularWhitespaceRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terNoSparseArraysRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terNoSparseArraysRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/terPreferArrowCallbackRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/terPreferArrowCallbackRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/validJsdocRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/validJsdocRule'>;
}
declare module 'tslint-eslint-rules/dist/rules/validTypeofRule.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/rules/validTypeofRule'>;
}
declare module 'tslint-eslint-rules/dist/support/token.js' {
  declare module.exports: $Exports<'tslint-eslint-rules/dist/support/token'>;
}
declare module 'tslint-eslint-rules/index' {
  declare module.exports: $Exports<'tslint-eslint-rules'>;
}
declare module 'tslint-eslint-rules/index.js' {
  declare module.exports: $Exports<'tslint-eslint-rules'>;
}
